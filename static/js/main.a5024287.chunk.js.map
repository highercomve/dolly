{"version":3,"sources":["store/auth/types.js","lib/redux.helper.js","lib/api.helper.js","store/general-errors/types.js","store/general-errors/actions.js","services/auth.service.js","store/auth/actions.js","components/molecules/LogoutButton/LogoutButton.jsx","components/layouts/Main.jsx","store/auth/reducer.js","store/devices/types.js","lib/utils.helper.js","lib/device.helper.js","store/devices/reducer.js","components/molecules/DevicesAutoComplete/DevicesAutoComplete.jsx","components/atoms/ConfirmButton/ConfirmButton.jsx","services/devices.service.js","store/devices/actions.js","components/molecules/DeviceRevisionSelect/DeviceRevisionSelect.jsx","components/atoms/Loader/Loader.jsx","components/molecules/DevicePlatformSelect/DevicePlatformSelect.jsx","components/organisms/Clone/Clone.jsx","store/general-errors/reducer.js","store/reducer.js","store/index.js","components/atoms/IsAuthenticated/IsAuthenticated.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AUTH_USER_GET","AUTH_USER_GET_INPROGRESS","AUTH_USER_GET_SUCCESS","AUTH_USER_GET_FAILURE","AUTH_CLEAR_TOKEN","AUTH_SAVE_TOKEN","defualtSuccessCb","state","action","successPrefix","payload","buildBasicActions","types","actionPrefix","success","type","failure","error","inProgress","buildBasicReducers","STATES","typePrefix","failurePrefix","successCb","INPROGRESS","FAILURE","SUCCESS","status","IN_PROGRESS","API_URL","process","_requestContentType","url","a","token","contentType","method","body","headers","options","JSON","stringify","fetch","_requestJSON","response","json","ok","redirected","_getJSON","_postJSON","processService","service","resp","Error","code","message","catchError","apiError","cb","dispatch","Login","setError","messsage","AUTH_STATUS","OAUTH_AUTH_URL","redirectToDefault","location","href","goToAuthorization","localStorage","removeItem","scope","redirectTo","responseType","clientId","encodeURI","OAuthUrl","getUserData","getUserActions","Types","SaveToken","hash","match","reduce","acc","val","split","key","value","getTokenFromImplicit","setItem","setToken","access_token","useStyles","makeStyles","theme","fab","position","top","spacing","right","connect","auth","Logout","classes","Button","className","variant","onClick","icon","marginRight","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","linearProgress","width","flex","justifyContent","alignItems","margin","vertialSpace","marginBottom","footer","Copyright","Typography","color","align","Link","Date","getFullYear","MainLayout","children","Fragment","CssBaseline","Container","maxWidth","src","alt","component","getItem","username","decodeJwt","jwt","jwtDecode","e","STATUS","initialState","exp","id","nick","orig_iat","prn","roles","gettingToken","getTokenError","ActionMapper","undefined","authReducer","DEVICES_GET_ALL","DEVICES_GET_ALL_INPROGRESS","DEVICES_GET_ALL_SUCCESS","DEVICES_GET_ALL_FAILURE","DEVICES_GET","DEVICES_GET_INPROGRESS","DEVICES_GET_SUCCESS","DEVICES_GET_FAILURE","DEVICES_CLONE","DEVICES_CLONE_INPROGRESS","DEVICES_CLONE_SUCCESS","DEVICES_CLONE_FAILURE","DEVICES_SET_SOURCE","DEVICES_SET_REVISION","DEVICES_SET_CLONE_USER_META","DEVICES_SET_DESTINATION","DEVICES_CLEAN_FORM","DEVICE_SET_FORM_ERRORS","DEVICE_SET_PLATFORM_TO_CLONE","resolvePath","obj","path","defaultReturn","prev","curr","hasOwnProperty","getPlatformSelection","platforms","Object","keys","selected","mergeSelection","source","destination","indexOf","getStatePlatforms","defaultSelection","index","name","replace","getStatePlatformsFiltered","platformsSelected","onlyPlatforms","newState","forEach","platformKey","stateKey","mergeToDestination","dest","completeClone","srcPlatforms","destPlatforms","cleanDest","cleanSrc","mergedState","getLatestRev","device","find","r","rev","revision","CLONING","WAITING_DEPLOY","list","clone","cloneUserMeta","selectedRevision","platformToClone","formErrors","mergeState","s","pointer","revisions","length","reducer","option","fontSize","filter","createFilterOptions","DevicesAutoComplete","defaultClasses","devices","label","onChange","Autocomplete","clearOnEscape","freeSolo","autoHighlight","style","getOptionLabel","filterOptions","params","filtered","inputValue","push","deviceid","_","newValue","renderOption","renderInput","TextField","fullWidth","inputProps","autoComplete","ConfirmButton","buttonTxt","dialogText","dialogBody","cancelTxt","confirmTxt","onConfirm","disabled","React","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","DEVS_URL","SUMMARY_URL","trailsUrl","deviceId","tailsDeviceSummaryUrl","getDeviceSummary","getDevicesSummary","getDevices","postTrails","getDeviceTrails","getDeviceByNick","devicenick","getDevicesActions","getDeviceActions","cloneDeviceActions","validateForm","errors","valid","values","some","d","setPlatformToClone","setSource","getDevice","getState","Service","devicesResponse","trails","deviceNick","deviceData","DeviceRevisionSelect","root","marginLeft","xs","transform","sm","lg","Loader","size","CircularProgress","DevicePlatformSelect","setPlatforms","useEffect","event","target","checked","FormGroup","justify","FormLabel","textAlign","map","k","p","FormControlLabel","control","Checkbox","user","devicesSummaryResponse","Promise","all","_d","assign","sort","b","console","info","setSourceAndGetPublic","getDeviceService","setDestination","setCloneUserMeta","cleanForm","setSelectedRevision","cloneDevice","validation","selectSrcState","selectedDestState","bind","newTrail","setDestinationPlatformToClone","loading","setLoading","UserStatus","DevicesStatus","gutterBottom","paragraph","Grid","container","item","md","LinearProgress","Alert","severity","initialErrors","rootReducer","combineReducers","composeEnhancers","compose","GetUser","SaveTokenAndRedirect","store","createStore","createRootReducer","applyMiddleware","ReduxThunk","m","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5024287.chunk.js","sourcesContent":["export const AUTH_USER_GET = 'AUTH_USER_GET'\nexport const AUTH_USER_GET_INPROGRESS = 'auth/user/get/inprogress'\nexport const AUTH_USER_GET_SUCCESS = 'auth/user/get/success'\nexport const AUTH_USER_GET_FAILURE = 'auth/user/get/failure'\n\nexport const AUTH_CLEAR_TOKEN = 'auth/token/clear'\nexport const AUTH_SAVE_TOKEN = 'auth/token/save'\n","const defualtSuccessCb = (state, action, successPrefix) => {\n  return action.payload\n}\n\nexport function buildBasicActions (types = {}, actionPrefix = '') {\n  return {\n    success: (payload) => ({\n      type: types[`${actionPrefix}_SUCCESS`],\n      payload\n    }),\n    failure: (error) => ({\n      type: types[`${actionPrefix}_FAILURE`],\n      error\n    }),\n    inProgress: () => ({\n      type: types[`${actionPrefix}_INPROGRESS`]\n    })\n  }\n}\n\nexport function buildBasicReducers (STATES, types, typePrefix, successPrefix, failurePrefix = 'error', successCb = defualtSuccessCb) {\n  const INPROGRESS = types[`${typePrefix}_INPROGRESS`]\n  const FAILURE = types[`${typePrefix}_FAILURE`]\n  const SUCCESS = types[`${typePrefix}_SUCCESS`]\n  return {\n    [INPROGRESS]: (state, action) => ({\n      ...state,\n      status: STATES.IN_PROGRESS\n    }),\n    [FAILURE]: (state, action) => ({\n      ...state,\n      [`${failurePrefix}`]: action.error,\n      status: STATES.FAILURE\n    }),\n    [SUCCESS]: (state, action) => {\n      return !successPrefix\n        ? {\n          ...state,\n          ...successCb(state, action, successPrefix),\n          status: STATES.SUCCESS\n        } : {\n          ...state,\n          [successPrefix]: successCb(state, action, successPrefix),\n          status: STATES.SUCCESS\n        }\n    }\n  }\n}\n","import fetch from 'isomorphic-fetch'\n\nexport const API_URL = process.env.REACT_APP_PH_API_URL || 'https://api.pantahub.com'\n\nexport const _requestContentType = async (\n  url,\n  token = '',\n  contentType = 'application/json',\n  method = 'GET',\n  body = {}\n) => {\n  let headers = {\n    'Content-Type': contentType\n  }\n\n  if (token) headers['Authorization'] = `Bearer ${token}`\n\n  let options = {\n    method,\n    headers: headers\n  }\n\n  if (method !== 'GET' && method !== 'HEAD') {\n    options['body'] = JSON.stringify(body)\n  }\n\n  return fetch(url, options)\n}\n\nconst _requestJSON = async (url, method = 'GET', token = '', body = {}) => {\n  const response = await _requestContentType(\n    url,\n    token,\n    'application/json',\n    method,\n    body\n  )\n\n  const json = await response.json()\n\n  return {\n    ok: response.ok,\n    redirected: response.redirected,\n    headers: response.headers,\n    status: response.status,\n    json\n  }\n}\n\nexport const _getJSON = async (url, token) =>\n  _requestJSON(url, 'GET', token)\n\nexport const _postJSON = async (url, token, body) =>\n  _requestJSON(url, 'POST', token, body)\n\nexport const _putJSON = async (url, token, body) =>\n  _requestJSON(url, 'PUT', token, body)\n\nexport const _patchJSON = async (url, token, body) =>\n  _requestJSON(url, 'PATCH', token, body)\n\nexport const _delete = async (url, token) =>\n  _requestJSON(url, 'DELETE', token)\n\nexport async function processService (service, success, failure) {\n  let resp\n  try {\n    resp = await service()\n    if (!resp.ok) {\n      failure(typeof resp.json.Error === 'string' ? { code: resp.status, message: resp.json.Error } : resp.json)\n    } else {\n      success(resp.json)\n    }\n  } catch (err) {\n    resp = {\n      ok: false,\n      json: {\n        code: 0,\n        message: err\n      }\n    }\n    failure(resp.json)\n  }\n  return resp\n}\n","/*\n * Copyright (c) 2019 Pantacor Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport const GENERAL_ERROR_SET = 'error/set'\nexport const GENERAL_ERROR_CLEAN = 'error/clean'\n","import * as Types from './types'\nimport { Login } from '../auth/actions'\n\nexport const catchError = (apiError, cb) => (dispatch) => {\n  dispatch(setError(apiError.code, apiError.messsage))\n  dispatch(cb(apiError))\n}\n\nexport function setError (type, error) {\n  if (type === 401) {\n    return Login()\n  }\n  return {\n    type: Types.GENERAL_ERROR_SET,\n    payload: {\n      type,\n      error\n    }\n  }\n}\n\nexport function clearError () {\n  return {\n    type: Types.GENERAL_ERROR_CLEAN\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport {\n  _getJSON,\n  API_URL\n} from '../lib/api.helper'\n\nconst AUTH_STATUS = `${API_URL}/auth/auth_status`\nconst OAUTH_AUTH_URL = `${process.env.REACT_APP_PH_URL}/oauth2/authorize`\nconst OAUTH_CLIENT_ID = process.env.REACT_APP_OAUTH_CLIENT_ID\nconst OAUTH_DEFAULT_SCOPE = process.env.REACT_APP_OAUTH_DEFAULT_SCOPE\nconst redirectToDefault = () => `${location.href}`\n\nexport const JWT_NAME = '_ph_token'\n\nexport function getTokenFromImplicit (hash) {\n  return (hash.match(/([^#=&]+)(=([^&]*))?/g) || []).reduce((acc, val) => {\n    const [key, value] = val.split('=')\n    acc[key] = value\n    return acc\n  }, {})\n}\n\nexport const OAuthUrl = (\n  scope = OAUTH_DEFAULT_SCOPE,\n  redirectTo,\n  responseType = 'token',\n  clientId = OAUTH_CLIENT_ID\n) => {\n  redirectTo = !redirectTo ? redirectToDefault() : redirectTo\n  return encodeURI(`${OAUTH_AUTH_URL}?client_id=${clientId}&scope=${scope}&redirect_uri=${redirectTo}&response_type=${responseType}`)\n}\n\nexport const goToAuthorization = () => {\n  localStorage.removeItem(JWT_NAME)\n  location.href = OAuthUrl()\n}\n\nexport const removeToken = () =>\n  localStorage.removeItem(JWT_NAME)\n\nexport const setToken = (token) =>\n  localStorage.setItem(JWT_NAME, token)\n\nexport async function getUserData (token) {\n  return _getJSON(AUTH_STATUS, token)\n}\n","/* eslint-disable no-restricted-globals */\n\nimport * as Types from './types'\nimport { buildBasicActions } from '../../lib/redux.helper'\nimport { processService } from '../../lib/api.helper'\nimport { catchError } from '../general-errors/actions'\nimport { goToAuthorization, removeToken, getTokenFromImplicit, getUserData, setToken } from '../../services/auth.service'\n\nconst getUserActions = buildBasicActions(Types, Types.AUTH_USER_GET)\n\nexport const Login = () => {\n  goToAuthorization()\n  return {\n    type: Types.AUTH_CLEAR_TOKEN\n  }\n}\n\nexport const Logout = () => {\n  removeToken()\n  return {\n    type: Types.AUTH_CLEAR_TOKEN\n  }\n}\n\nexport const SaveToken = (hash) => {\n  const token = getTokenFromImplicit(hash)\n  setToken(token.access_token)\n  return {\n    type: Types.AUTH_SAVE_TOKEN,\n    payload: token.access_token\n  }\n}\n\nexport const SaveTokenAndRedirect = (hash) => (dispatch) => {\n  dispatch(SaveToken(hash))\n  location.hash = ''\n}\n\nexport const GetUser = () => async (dispatch, getState) => {\n  dispatch(getUserActions.inProgress())\n  const state = getState()\n\n  if (!state.auth.token) {\n    return null\n  }\n\n  return processService(\n    getUserData.bind(null, state.auth.token),\n    (resp) => dispatch(getUserActions.success(resp)),\n    (error) => dispatch(catchError(error, getUserActions.failure))\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Logout } from '../../../store/auth/actions'\nimport { makeStyles } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\n\nexport const useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'absolute',\n    top: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}))\n\nexport function LogoutButton ({ token, Logout }) {\n  const classes = useStyles()\n\n  if (token === null) {\n    return null\n  }\n\n  return (\n    <Button\n      className={classes.fab}\n      variant=\"outlined\"\n      onClick={Logout}\n    >\n      Log out\n    </Button>\n  )\n}\n\nexport default connect(state => ({\n  token: state.auth.token\n}), {\n  Logout\n})(LogoutButton)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Link from '@material-ui/core/Link'\nimport Container from '@material-ui/core/Container'\nimport LogoutButton from '../molecules/LogoutButton/LogoutButton'\n\nexport const useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2)\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 0, 6)\n  },\n  heroButtons: {\n    marginTop: theme.spacing(8)\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8)\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  cardMedia: {\n    paddingTop: '56.25%' // 16:9\n  },\n  cardContent: {\n    flexGrow: 1\n  },\n  linearProgress: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  vertialSpace: {\n    marginBottom: theme.spacing(2)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6)\n  }\n}))\n\nfunction Copyright () {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.github.com/highercomve/dolly\">\n        Sergio Marin\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n\nexport default function MainLayout ({ children }) {\n  const classes = useStyles()\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <LogoutButton />\n      <header>\n        <Container maxWidth=\"md\">\n          <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"Dolly\" height=\"100px\" />\n          {/* <Typography variant=\"h3\" color=\"inherit\" noWrap>\n            Dolly\n          </Typography> */}\n        </Container>\n      </header>\n      <main>\n        {children}\n      </main>\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Pantahub cloner is a thirdparty opensource project\n        </Typography>\n        <Copyright />\n      </footer>\n    </React.Fragment>\n  )\n}\n","import * as Types from './types'\nimport jwtDecode from 'jwt-decode'\nimport { JWT_NAME } from '../../services/auth.service'\nimport { buildBasicReducers } from '../../lib/redux.helper'\n\nconst authInfo = localStorage.getItem(JWT_NAME)\nconst [token, username] = (authInfo || '').split('|')\nconst decodeJwt = (jwt = '') => {\n  try {\n    return jwtDecode(jwt)\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const STATUS = {\n  IN_PROGRESS: 'INPROGRESS',\n  SUCCESS: 'SUCCESS',\n  FAILURE: 'FAILURE'\n}\n\nconst initialState = {\n  username: username || '',\n  token: token || null,\n  exp: null,\n  id: '',\n  nick: '',\n  orig_iat: null,\n  prn: '',\n  roles: '',\n  type: '',\n  gettingToken: false,\n  getTokenError: null,\n  status: null,\n  ...decodeJwt(token)\n}\n\nconst mergeState = (state, action, successPrefix) => ({\n  ...state,\n  ...action.payload\n})\n\nconst ActionMapper = {\n  ...buildBasicReducers(STATUS, Types, Types.AUTH_USER_GET, undefined, undefined, mergeState),\n  [Types.AUTH_SAVE_TOKEN]: (state, action) => ({\n    ...state,\n    ...decodeJwt(action.payload),\n    token: action.payload\n  }),\n  [Types.AUTH_CLEAR_TOKEN]: (state, action) => ({ ...initialState, token: null })\n}\n\nexport default function authReducer (state = initialState, action) {\n  return ActionMapper[action.type] ? ActionMapper[action.type](state, action) : state\n}\n","\nexport const DEVICES_GET_ALL = 'DEVICES_GET_ALL'\nexport const DEVICES_GET_ALL_INPROGRESS = 'devices/get/all/inprogress'\nexport const DEVICES_GET_ALL_SUCCESS = 'devices/get/all/success'\nexport const DEVICES_GET_ALL_FAILURE = 'devices/get/all/failure'\n\nexport const DEVICES_GET = 'DEVICES_GET'\nexport const DEVICES_GET_INPROGRESS = 'devices/get/inprogress'\nexport const DEVICES_GET_SUCCESS = 'devices/get/success'\nexport const DEVICES_GET_FAILURE = 'devices/get/failure'\n\nexport const DEVICES_CLONE = 'DEVICES_CLONE'\nexport const DEVICES_CLONE_INPROGRESS = 'devices/clone/inprogress'\nexport const DEVICES_CLONE_SUCCESS = 'devices/clone/success'\nexport const DEVICES_CLONE_FAILURE = 'devices/clone/failure'\n\nexport const DEVICES_SET_SOURCE = 'devices/set/source'\nexport const DEVICES_SET_REVISION = 'devices/set/selected-revision'\nexport const DEVICES_SET_CLONE_USER_META = 'devices/set/clone-user-meta'\nexport const DEVICES_SET_DESTINATION = 'devices/set/destination'\nexport const DEVICES_CLEAN_FORM = 'devices/clear/form'\nexport const DEVICE_SET_FORM_ERRORS = 'devices/set/form-errors'\n\nexport const DEVICE_SET_PLATFORM_TO_CLONE = 'devices/set/platform-to-clone'\n","/**\n * resolvePath for objects\n * @param {*} obj\n * @param {string} path\n * @param {*} defaultReturn\n * @returns *\n */\nexport function resolvePath (obj, path, defaultReturn) {\n  return path.split('.').reduce((prev, curr) =>\n    prev && prev.hasOwnProperty(curr) ? prev[curr] : defaultReturn, obj)\n}\n\nexport function ObjectToArray (obj) {\n  return Object.keys(obj).map(key => obj[key])\n}\n","import { resolvePath } from './utils.helper'\n\nfunction getPlatformSelection (platforms) {\n  return Object.keys(platforms).reduce((acc, key) => {\n    acc[key] = platforms[key].selected\n    return acc\n  }, {})\n}\n\nfunction mergeSelection (source, destination) {\n  return Object.keys(destination).reduce((acc, key) => {\n    if (key.indexOf('_config') >= 0) {\n      acc[key] = true\n    } else if (source[key]) {\n      acc[key] = false\n    } else {\n      acc[key] = destination[key]\n    }\n    return acc\n  }, {})\n}\n\nexport function getStatePlatforms (state, defaultSelection = false) {\n  return Object.keys(state).reduce((acc, key, index) => {\n    if (key.indexOf('src.json') >= 0 || key.indexOf('_config') >= 0) {\n      const name = key.replace('/src.json', '')\n      acc[name] = {\n        ...state[key],\n        selected: defaultSelection,\n        name\n      }\n    }\n    return acc\n  }, {})\n}\n\nexport function getStatePlatformsFiltered (state, platformsSelected = {}, onlyPlatforms = false) {\n  const newState = onlyPlatforms ? {} : { ...state }\n  Object.keys(platformsSelected).forEach((platformKey) => {\n    if (platformsSelected[platformKey] === false && !onlyPlatforms) {\n      Object.keys(newState).forEach((stateKey) => {\n        if (stateKey.indexOf(platformKey) === 0) {\n          delete newState[stateKey]\n        }\n      })\n    }\n\n    if (platformsSelected[platformKey] === true && onlyPlatforms) {\n      Object.keys(state).forEach((stateKey) => {\n        if (stateKey.indexOf(platformKey) === 0) {\n          newState[stateKey] = state[stateKey]\n        }\n      })\n    }\n  })\n  return newState\n}\n\nexport function mergeToDestination (src, dest, completeClone = false) {\n  if (completeClone) {\n    return src\n  }\n  const srcPlatforms = getPlatformSelection(getStatePlatforms(src, true))\n  const destPlatforms = mergeSelection(\n    srcPlatforms,\n    getPlatformSelection(getStatePlatforms(dest, true))\n  )\n\n  const cleanDest = getStatePlatformsFiltered(dest, destPlatforms, false)\n  const cleanSrc = getStatePlatformsFiltered(src, srcPlatforms, true)\n\n  const mergedState = {\n    ...cleanSrc,\n    ...cleanDest\n  }\n\n  return mergedState\n}\n\nexport function getLatestRev (device = {}) {\n  return resolvePath(device, 'revisions', []).find(r => r.rev === device.revision)\n  // return device.revisions.find(rev => resolvePath(rev, 'progress.status', '') === 'DONE')\n}\n","import * as Types from './types'\nimport { buildBasicReducers } from '../../lib/redux.helper'\nimport { getLatestRev } from '../../lib/device.helper'\n\nexport const STATUS = {\n  IN_PROGRESS: 'IN_PROGRESS',\n  FAILURE: 'FAILURE',\n  SUCCESS: 'SUCCESS',\n  CLONING: {\n    IN_PROGRESS: 'CLONING_IN_PROGRESS',\n    FAILURE: 'CLONING_FAILURE',\n    SUCCESS: 'CLONING_SUCCESS'\n  },\n  WAITING_DEPLOY: 'WAITING_DEPLOY'\n}\n\nexport const initialState = {\n  list: [],\n  status: null,\n  clone: null,\n  source: null,\n  destination: null,\n  cloneUserMeta: false,\n  selectedRevision: {\n    src: null,\n    dest: null\n  },\n  platformToClone: {\n    src: null,\n    dest: null\n  },\n  formErrors: {}\n}\n\nconst mergeState = (state, action, successPrefix) => ({\n  ...state[successPrefix],\n  ...action.payload\n})\n\nconst ActionMapper = {\n  ...buildBasicReducers(STATUS, Types, Types.DEVICES_GET_ALL, 'list', undefined, mergeState),\n  ...buildBasicReducers(STATUS.CLONING, Types, Types.DEVICES_CLONE, 'clone', undefined, mergeState),\n  [Types.DEVICES_SET_DESTINATION]: (s, a) => ({\n    ...s,\n    destination: a.payload,\n    selectedRevision: {\n      ...s.selectedRevision,\n      dest: getLatestRev(a.payload)\n    }\n  }),\n  [Types.DEVICES_SET_CLONE_USER_META]: (s, a) => ({\n    ...s,\n    cloneUserMeta: a.payload\n  }),\n  [Types.DEVICE_SET_FORM_ERRORS]: (s, a) => ({\n    ...s,\n    formErrors: a.payload\n  }),\n  [Types.DEVICES_SET_REVISION]: (s, a) => ({\n    ...s,\n    selectedRevision: {\n      ...s.selectedRevision,\n      [a.pointer]: a.payload\n    }\n  }),\n  [Types.DEVICES_SET_SOURCE]: (s, a) => ({\n    ...s,\n    source: !a.payload ? null : a.payload,\n    selectedRevision: {\n      ...s.selectedRevision,\n      src: !a.payload\n        ? null\n        : a.payload.revisions && a.payload.revisions.length\n          ? getLatestRev(a.payload)\n          : null\n    }\n  }),\n  [Types.DEVICE_SET_PLATFORM_TO_CLONE]: (state, action) => ({\n    ...state,\n    platformToClone: {\n      ...state.platformToClone,\n      [action.pointer]: action.payload\n    }\n  }),\n  [Types.DEVICES_CLEAN_FORM]: (state) => ({\n    ...initialState,\n    list: state.list\n  })\n}\n\nexport default function reducer (state = initialState, action) {\n  return ActionMapper[action.type] ? ActionMapper[action.type](state, action) : state\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n})\n\nconst filter = createFilterOptions()\n\nexport default function DevicesAutoComplete ({ value, defaultClasses = {}, devices, label, onChange = () => null }) {\n  const classes = useStyles()\n\n  return (\n    <Autocomplete\n      id=\"devices-select\"\n      clearOnEscape\n      freeSolo\n      autoHighlight\n      style={{ width: '100%' }}\n      options={devices}\n      value={value}\n      classes={{\n        ...defaultClasses,\n        option: classes.option\n      }}\n      getOptionLabel={option => option['device-nick']}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params)\n\n        if (params.inputValue !== '') {\n          filtered.push({\n            'device-nick': `Search ${params.inputValue} ...`,\n            deviceid: params.inputValue\n          })\n        }\n\n        return filtered\n      }}\n      onChange={(_, newValue) => {\n        onChange(newValue)\n      }}\n      renderOption={option => (\n        <React.Fragment>\n          {option['device-nick']}\n        </React.Fragment>\n      )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={label}\n          variant=\"outlined\"\n          fullWidth\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'Device nick' // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nexport default function ConfirmButton ({\n  buttonTxt = '',\n  variant = 'outlined',\n  color = 'primary',\n  dialogText = '',\n  dialogBody = null,\n  cancelTxt = 'Cancel',\n  confirmTxt = 'Confirm',\n  onConfirm = () => null,\n  disabled\n}) {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleConfirm = () => {\n    setOpen(false)\n    onConfirm()\n  }\n\n  return (\n    <div>\n      <Button variant={variant} color={color} onClick={handleClickOpen} disabled={disabled}>\n        {buttonTxt}\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{dialogText}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {dialogBody}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {cancelTxt}\n          </Button>\n          <Button onClick={handleConfirm} color=\"primary\" autoFocus>\n            {confirmTxt}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n","import {\n  _getJSON,\n  _postJSON,\n  _putJSON,\n  API_URL\n} from '../lib/api.helper'\n\nconst DEVS_URL = `${API_URL}/devices`\nconst SUMMARY_URL = `${API_URL}/trails/summary`\n\nconst trailsUrl = (deviceId) =>\n  `${API_URL}/trails/${deviceId}/steps`\n\nconst tailsDeviceSummaryUrl = (id) =>\n  `${API_URL}/trails/${id}/summary`\n\nexport const getDeviceSummary = async (token, id) =>\n  _getJSON(tailsDeviceSummaryUrl(id), token)\n\nexport const getDevicesSummary = async (token) =>\n  _getJSON(SUMMARY_URL, token)\n\nexport const getDevices = async (token) =>\n  _getJSON(DEVS_URL + '/', token)\n\nexport const postTrails = async (token, id, payload) =>\n  _postJSON(trailsUrl(id), token, payload)\n\nexport const setDeviceMetadata = async (token, id, meta, type = 'user-meta') =>\n  _putJSON(`${DEVS_URL}/${id}/${type}`, token, meta)\n\nexport const getDeviceTrails = async (token, id) =>\n  _getJSON(trailsUrl(id) + '?progress.status={%22$ne%22:%22%22}', token)\n\nexport const getDeviceByNick = async (token, devicenick) =>\n  _getJSON(`${DEVS_URL}/np/${devicenick}`, token)\n","import * as Types from './types'\nimport * as Service from '../../services/devices.service'\nimport { buildBasicActions } from '../../lib/redux.helper'\nimport { processService } from '../../lib/api.helper'\nimport { catchError } from '../general-errors/actions'\nimport { getStatePlatformsFiltered, mergeToDestination } from '../../lib/device.helper'\nimport { resolvePath } from '../../lib/utils.helper'\n\nconst getDevicesActions = buildBasicActions(Types, Types.DEVICES_GET_ALL)\nconst getDeviceActions = buildBasicActions(Types, Types.DEVICES_GET)\nconst cloneDeviceActions = buildBasicActions(Types, Types.DEVICES_CLONE)\n\nconst validateForm = (state) => {\n  const errors = {\n    valid: true\n  }\n\n  const devices = Object.values(state.list)\n\n  if (state.source === null) {\n    errors.source = 'Please select a source device'\n  }\n  if (state.destination === null) {\n    errors.destination = 'Please select a destination device'\n  }\n\n  if (state.destination !== null && !devices.some((d) => d.deviceid === state.destination.deviceid)) {\n    errors.destination = 'You need to be owner of the destination device'\n  }\n\n  if (Object.keys(errors).length > 1) {\n    errors.valid = false\n  }\n\n  return errors\n}\n\nexport const setPlatformToClone = (payload, pointer = 'src') => ({\n  type: Types.DEVICE_SET_PLATFORM_TO_CLONE,\n  payload,\n  pointer\n})\n\nexport const setDestination = (payload, pointer = 'src') => ({\n  type: Types.DEVICES_SET_DESTINATION,\n  payload,\n  pointer\n})\n\nexport const setSource = (payload) => ({\n  type: Types.DEVICES_SET_SOURCE,\n  payload: payload\n})\n\nexport const setSourceAndGetPublic = (payload) => async (dispatch, getState) => {\n  if (!payload) {\n    return dispatch(setSource(null))\n  }\n  const state = getState()\n  const alreadyOnList = Object.keys(state.devices.list).some(\n    key => state.devices.list[key].deviceid === payload.deviceid\n  )\n\n  if (alreadyOnList) {\n    return dispatch(setSource(payload))\n  }\n\n  const getDeviceService = payload.deviceid.indexOf('/') >= 0 ? getDeviceByNick : getDevice\n  return processService(\n    async () => dispatch(getDeviceService(payload.deviceid)),\n    (resp) => dispatch(setSource(resp)),\n    (error) => console.info(error)\n  )\n}\n\nexport const setCloneUserMeta = (payload) => ({\n  type: Types.DEVICES_SET_CLONE_USER_META,\n  payload: payload\n})\n\nexport const setSelectedRevision = (payload, pointer = 'src') => ({\n  type: Types.DEVICES_SET_REVISION,\n  payload,\n  pointer\n})\n\nexport const cleanForm = () => ({\n  type: Types.DEVICES_CLEAN_FORM\n})\n\nexport const getDevices = () => async (dispatch, getState) => {\n  dispatch(getDevicesActions.inProgress())\n  const state = getState()\n\n  return processService(\n    async () => {\n      const devicesSummaryResponse = await Service.getDevicesSummary(state.auth.token)\n      const devicesResponse = await Service.getDevices(state.auth.token)\n      const devices = await Promise.all(\n        devicesSummaryResponse.json.map(async (d) => {\n          try {\n            const trails = await Service.getDeviceTrails(state.auth.token, d.deviceid)\n            const device = resolvePath(devicesResponse, 'json', []).find((_d) => _d.id === d.deviceid)\n            if (device) {\n              Object.assign(d, device)\n            }\n            d.revisions = trails.json.sort((a, b) => a.rev < b.rev)\n            return d\n          } catch (e) {\n            console.info(e)\n            return d\n          }\n        })\n      )\n      return {\n        ...devicesSummaryResponse,\n        json: devices\n      }\n    },\n    (resp) => dispatch(getDevicesActions.success(resp)),\n    (error) => dispatch(catchError(error, getDevicesActions.failure))\n  )\n}\n\nexport const getDevice = (id) => async (dispatch, getState) => {\n  dispatch(getDeviceActions.inProgress())\n  const state = getState()\n\n  return processService(\n    async () => {\n      const devicesResponse = await Service.getDeviceSummary(state.auth.token, id)\n      const trails = await Service.getDeviceTrails(state.auth.token, id)\n      devicesResponse.json.revisions = trails.json\n      return devicesResponse\n    },\n    (resp) => dispatch(getDeviceActions.success(resp)),\n    (error) => dispatch(catchError(error, getDeviceActions.failure))\n  )\n}\n\nexport const getDeviceByNick = (deviceNick) => async (dispatch, getState) => {\n  dispatch(getDeviceActions.inProgress())\n  const state = getState()\n\n  return processService(\n    async () => {\n      const deviceData = await Service.getDeviceByNick(state.auth.token, deviceNick)\n      const devicesResponse = await Service.getDeviceSummary(state.auth.token, deviceData.json.id)\n      const trails = await Service.getDeviceTrails(state.auth.token, deviceData.json.id)\n      devicesResponse.json.revisions = trails.json\n      return devicesResponse\n    },\n    (resp) => dispatch(getDeviceActions.success(resp)),\n    (error) => dispatch(catchError(error, getDeviceActions.failure))\n  )\n}\n\nexport const cloneDevice = () => async (dispatch, getState) => {\n  dispatch(cloneDeviceActions.inProgress())\n  const state = getState()\n\n  const validation = validateForm(state.devices)\n\n  if (!validation.valid) {\n    dispatch(cloneDeviceActions.failure({ type: 'invalid', error: 'invalid form' }))\n    dispatch({\n      type: Types.DEVICE_SET_FORM_ERRORS,\n      payload: validation\n    })\n    return\n  }\n\n  const selectSrcState = getStatePlatformsFiltered(\n    state.devices.selectedRevision.src.state,\n    state.devices.platformToClone.src\n  )\n  const selectedDestState = getStatePlatformsFiltered(\n    state.devices.selectedRevision.dest.state,\n    state.devices.platformToClone.dest\n  )\n\n  const payload = {\n    state: mergeToDestination(selectSrcState, selectedDestState),\n    rev: -1,\n    'commit-msg': `Cloned from device ${state.devices.source['device-nick']} rev (${state.devices.selectedRevision.src.rev})`\n  }\n\n  const newTrail = await processService(\n    Service.postTrails.bind(null, state.auth.token, state.devices.destination.deviceid, payload),\n    (resp) => dispatch(cloneDeviceActions.success(resp)),\n    (error) => dispatch(catchError(error, cloneDeviceActions.failure))\n  )\n\n  if (state.devices.cloneUserMeta) {\n    console.info('TODO: Clone user-meta is not implemented yet')\n  }\n\n  return newTrail\n}\n","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n})\n\nexport default function DeviceRevisionSelect ({ device, revision, label, onChange = () => null }) {\n  const classes = useStyles()\n\n  if (!device) {\n    return null\n  }\n\n  return (\n    <Autocomplete\n      clearOnEscape\n      autoHighlight\n      id=\"devices-revision-select\"\n      style={{ width: '100%' }}\n      options={device.revisions}\n      classes={{\n        option: classes.option\n      }}\n      onChange={(_, newValue) => {\n        onChange(newValue)\n      }}\n      value={revision}\n      getOptionLabel={option => `${option.rev} (${option['state-sha']})`}\n      renderOption={option => (\n        <React.Fragment>\n          <span>{option.rev}</span>\n          {option['commit-msg']}\n        </React.Fragment>\n      )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label={label}\n          variant=\"outlined\"\n          fullWidth\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'Device nick' // disable autocomplete and autofill\n          }}\n        />\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2)\n    }\n  },\n  xs: {\n    transform: 'scale(1)'\n  },\n  sm: {\n    transform: 'scale(2)'\n  },\n  lg: {\n    transform: 'scale(3)'\n  }\n}))\n\nexport default function Loader ({ message, size }) {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CircularProgress className={classes[size]} />\n      {message && (<h4>{message}</h4>)}\n    </div >\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { getStatePlatforms } from '../../../lib/device.helper'\nimport { FormLabel } from '@material-ui/core'\n\nexport default function DevicePlatformSelect ({ revision = {}, device, onChange, label }) {\n  const [platforms, setPlatforms] = useState({})\n\n  useEffect(() => {\n    if (revision && revision.state) {\n      setPlatforms(getStatePlatforms(revision.state, true))\n    }\n  }, [revision])\n\n  useEffect(() => {\n    onChange(Object.keys(platforms).reduce((acc, key) => {\n      acc[key] = platforms[key].selected\n      return acc\n    }, {}))\n  }, [platforms, onChange])\n\n  if (!device || !revision || !revision.state) {\n    return null\n  }\n\n  if (platforms.length <= 0) {\n    return (\n      <div>\n        {`This device doesn't have any platform to clone`}\n      </div>\n    )\n  }\n\n  const setPlatformToClone = (event) => {\n    setPlatforms({\n      ...platforms,\n      [event.target.value]: {\n        ...platforms[event.target.value],\n        selected: event.target.checked\n      }\n    })\n  }\n\n  return (\n    <FormGroup justify=\"\" style={{ marginTop: '2em' }}>\n      {label && (\n        <FormLabel style={{ textAlign: 'left' }}>\n          {label}\n        </FormLabel>\n      )}\n      {Object.keys(platforms).map((k) => platforms[k]).map((p) => (\n        <FormControlLabel\n          key={p.name}\n          control={\n            <Checkbox\n              id=\"user-meta\"\n              color=\"primary\"\n              value={p.name}\n              checked={p.selected}\n              onChange={setPlatformToClone}\n              inputProps={{\n                'aria-label': p.name\n              }}\n            />\n          }\n          label={p.name}\n        />\n      ))}\n    </FormGroup>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Button from '@material-ui/core/Button'\nimport DoubleArrowIcon from '@material-ui/icons/DoubleArrow'\nimport Alert from '@material-ui/lab/Alert'\n\nimport { useStyles } from '../../layouts/Main'\nimport { STATUS as UserStatus } from '../../../store/auth/reducer'\nimport { STATUS as DevicesStatus } from '../../../store/devices/reducer'\nimport DevicesAutoComplete from '../../molecules/DevicesAutoComplete/DevicesAutoComplete'\nimport ConfirmButton from '../../atoms/ConfirmButton/ConfirmButton'\nimport {\n  getDevices,\n  setSourceAndGetPublic,\n  setDestination,\n  setCloneUserMeta,\n  cleanForm,\n  setSelectedRevision,\n  cloneDevice,\n  setPlatformToClone\n} from '../../../store/devices/actions'\nimport DeviceRevisionSelect from '../../molecules/DeviceRevisionSelect/DeviceRevisionSelect'\nimport Loader from '../../atoms/Loader/Loader'\nimport DevicePlatformSelect from '../../molecules/DevicePlatformSelect/DevicePlatformSelect'\nimport { resolvePath } from '../../../lib/utils.helper'\n\n// if both devices have an arch in meta we can filter...\nconst filterDeviceByArch = (source) => (device) => {\n  return !resolvePath(device, 'device-meta', {})['pantavisor.arch']\n\t|| !resolvePath(source, 'device-meta', {})['pantavisor.arch']\n    ? true\n    : resolvePath(source, 'device-meta', {})['pantavisor.arch'] ===\n      resolvePath(device, 'device-meta', {})['pantavisor.arch']\n}\n\nfunction Clone ({\n  user,\n  devices,\n  getDevices,\n  setSourceAndGetPublic,\n  setDestination,\n  setCloneUserMeta,\n  cleanForm,\n  setSelectedRevision,\n  cloneDevice,\n  setPlatformToClone,\n  setDestinationPlatformToClone\n}) {\n  const classes = useStyles()\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (user.status === UserStatus.SUCCESS && devices.status === null) {\n      getDevices()\n    }\n  }, [devices, devices.status, getDevices, user, user.status])\n\n  useEffect(() => {\n    if (devices.status === DevicesStatus.CLONING.IN_PROGRESS || devices.status === DevicesStatus.WAITING_DEPLOY) {\n      setLoading(true)\n    } else {\n      setLoading(false)\n    }\n  }, [devices, devices.status])\n\n  if (devices.status === DevicesStatus.IN_PROGRESS) {\n    return (\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Typography component=\"h4\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n            Welcome, {user.nick}\n          </Typography>\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n            Please wait a second, first we need to load your devices.\n          </Typography>\n          <div className={classes.flex} style={{ height: '200px' }}>\n            <Loader size=\"lg\" />\n          </div>\n        </Container>\n      </div>\n    )\n  }\n\n  if (devices.list.length <= 0) {\n    return null\n  }\n\n  return (\n    <div className={classes.heroContent}>\n      <Container maxWidth=\"md\">\n        <Typography component=\"h4\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Welcome, {user.nick}\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Lets start cloning devices, this feature works with public devices or personal devices.\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item md={5} xs={12}>\n              <DevicesAutoComplete\n                value={devices.source}\n                devices={Object.values(devices.list)}\n                label=\"Choose a device source\"\n                onChange={setSourceAndGetPublic}\n              />\n              <br />\n              <DeviceRevisionSelect\n                className={classes.vertialSpace}\n                device={devices.source}\n                revision={devices.selectedRevision.src}\n                label=\"Choose revision source\"\n                onChange={setSelectedRevision}\n              />\n              <DevicePlatformSelect\n                device={devices.source}\n                label=\"Select platforms to be cloned\"\n                revision={devices.selectedRevision.src}\n                onChange={setPlatformToClone}\n              />\n              {devices.selectedRevision.src && (\n                <FormGroup justify=\"center\">\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        id=\"user-meta\"\n                        color=\"primary\"\n                        checked={devices.cloneUserMeta}\n                        onChange={(e) => setCloneUserMeta(e.target.checked) }\n                        inputProps={{\n                          'aria-label': 'Clone all user-meta data (only if you are the owner)'\n                        }}\n                      />\n                    }\n                    label=\"Clone all user-meta data (only device owner)\"\n                  />\n                </FormGroup>\n              )}\n            </Grid>\n            <Grid item md={2} xs={12}>\n              <DoubleArrowIcon className=\"clone-icon\" fontSize=\"large\"/>\n            </Grid>\n            <Grid item md={5} xs={12}>\n              <DevicesAutoComplete\n                value={devices.destination}\n                devices={Object.values(devices.list).filter(filterDeviceByArch(devices.source))}\n                label=\"Choose a device destination\"\n                onChange={setDestination}\n              />\n              {devices.destination && (\n                <div className=\"mt-sm--2 mt--7\">\n                  <DevicePlatformSelect\n                    device={devices.destination}\n                    label=\"Select platforms you want to keep\"\n                    revision={devices.selectedRevision.dest}\n                    onChange={setDestinationPlatformToClone}\n                  />\n                </div>\n              )}\n            </Grid>\n            <Grid item md={12}>\n              {devices.status !== DevicesStatus.CLONING.SUCCESS && loading && (\n                <div className={classes.linearProgress} ><LinearProgress /> </div>\n              )}\n              {devices.status !== DevicesStatus.CLONING.SUCCESS && !loading && (\n                <div className={classes.flex}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"default\"\n                    onClick={cleanForm}>\n                    Clear form\n                  </Button>\n                  <ConfirmButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    buttonTxt=\"Start update process\"\n                    disabled={!devices.source || !devices.destination || !devices.selectedRevision.src}\n                    dialogText={\n                      !!devices.source && !!devices.destination && !!devices.selectedRevision.src\n                        ? `Are you sure you want to clone ${devices.source['device-nick']} (${devices.selectedRevision.src.rev}) to ${devices.destination['device-nick']}?`\n                        : ''\n                    }\n                    onConfirm={cloneDevice}\n                  />\n                </div>\n              )}\n              {devices.status === DevicesStatus.CLONING.SUCCESS && (\n                <Alert severity=\"success\">Your device has been cloned!</Alert>\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    devices: state.devices,\n    user: state.auth\n  }),\n  {\n    getDevices,\n    setSourceAndGetPublic,\n    setDestination,\n    setCloneUserMeta,\n    cleanForm,\n    setSelectedRevision,\n    cloneDevice,\n    setPlatformToClone,\n    setDestinationPlatformToClone: (payload) => setPlatformToClone(payload, 'dest')\n  }\n)(Clone)\n","/*\n * Copyright (c) 2017 Pantacor Ltd.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport * as Types from './types'\n\nconst initialErrors = {\n  type: null,\n  error: null\n}\n\nexport default function reducer (state = initialErrors, action) {\n  switch (action.type) {\n    case Types.GENERAL_ERROR_CLEAN:\n      return initialErrors\n    case Types.GENERAL_ERROR_SET:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport devices from './devices/reducer'\nimport errors from './general-errors/reducer'\nimport auth from './auth/reducer'\n\nconst rootReducer = () => combineReducers({\n  devices,\n  errors,\n  auth\n})\n\nexport default rootReducer\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport ReduxThunk from 'redux-thunk'\n\nimport createRootReducer from './reducer'\n\nconst composeEnhancers = process.env.REACT_APP_REDUX_DEBUG === 'true'\n  ? composeWithDevTools({ trace: true, traceLimit: 25 })\n  : compose\n\nexport default () => {\n  return createStore(\n    createRootReducer(), /* preloadedState, */\n    composeEnhancers(\n      applyMiddleware(\n        ...[\n          ReduxThunk\n        ].filter(m => !!m)\n      )\n    )\n  )\n}\n","/* eslint-disable no-restricted-globals */\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { Login, GetUser, SaveTokenAndRedirect } from '../../../store/auth/actions'\nimport { STATUS } from '../../../store/auth/reducer'\n\nfunction IsAuthenticated ({ children, status, token, Login, GetUser, SaveTokenAndRedirect }) {\n  useEffect(() => {\n    const hash = location.hash\n\n    if (hash !== '') {\n      SaveTokenAndRedirect(hash)\n      return\n    }\n\n    if (!hash && !token) {\n      Login()\n    }\n  }, [token, SaveTokenAndRedirect, Login])\n\n  useEffect(() => {\n    if (status === null) {\n      GetUser()\n    }\n  }, [GetUser, status])\n\n  if (status === STATUS.INPROGRESS) {\n    return (\n      <CircularProgress />\n    )\n  }\n  return (\n    <div className=\"App\">\n      {children}\n    </div>\n  )\n}\n\nexport default connect(\n  (state) => ({\n    token: state.auth.token,\n    status: state.auth.status\n  }),\n  {\n    Login,\n    GetUser,\n    SaveTokenAndRedirect\n  }\n)(IsAuthenticated)\n","import React from 'react'\nimport MainLayout from './components/layouts/Main'\nimport Clone from './components/organisms/Clone/Clone'\nimport { Provider } from 'react-redux'\nimport CreateStore from './store'\nimport IsAuthenticated from './components/atoms/IsAuthenticated/IsAuthenticated'\n\nimport './App.scss'\n\nconst store = CreateStore()\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <IsAuthenticated>\n        <MainLayout>\n          <Clone />\n        </MainLayout>\n      </IsAuthenticated>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.info('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}